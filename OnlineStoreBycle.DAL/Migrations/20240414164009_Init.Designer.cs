// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineStoreBycle.DAL.Context;

#nullable disable

namespace OnlineStoreBycle.DAL.Migrations
{
    [DbContext(typeof(OnlineStoreBycleDbContext))]
    [Migration("20240414164009_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BrandBycleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BrandBycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BycleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int>("CountSpeed")
                        .HasColumnType("integer");

                    b.Property<string>("FrameMaterialName")
                        .HasColumnType("text");

                    b.Property<int>("FrameSizeId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageLink")
                        .HasColumnType("text");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDepreciation")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.Property<int>("WheelDiameter")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("FrameSizeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Bycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BycleTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BycleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "M"
                        },
                        new
                        {
                            Id = 2,
                            Name = "E"
                        },
                        new
                        {
                            Id = 3,
                            Name = "W"
                        });
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.FrameSizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FrameSizes");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.NumberBycleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BycleId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BycleId");

                    b.ToTable("NumberBycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.OrderBycleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCastle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHelmet")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLantern")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberBycleId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NumberBycleId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderBycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressReturn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateBegin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.PriceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BycleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateBegin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BycleId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.ReviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BycleId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BycleId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.StatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BycleEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.BrandBycleEntity", "BrandBycle")
                        .WithMany("Bycles")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreBycle.DAL.Entites.FrameSizeEntity", "FrameSize")
                        .WithMany("Bycles")
                        .HasForeignKey("FrameSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreBycle.DAL.Entites.BycleTypeEntity", "BycleType")
                        .WithMany("Bycles")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandBycle");

                    b.Navigation("BycleType");

                    b.Navigation("FrameSize");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.NumberBycleEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.BycleEntity", "Bycle")
                        .WithMany("NumberBycles")
                        .HasForeignKey("BycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bycle");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.OrderBycleEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.NumberBycleEntity", "NumberBycle")
                        .WithMany("OrderBycles")
                        .HasForeignKey("NumberBycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreBycle.DAL.Entites.OrderEntity", "Order")
                        .WithMany("OrderBycles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NumberBycle");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.OrderEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.ClientEntity", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreBycle.DAL.Entites.StatusEntity", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.PriceEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.BycleEntity", "Bycle")
                        .WithMany("Prices")
                        .HasForeignKey("BycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bycle");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.ReviewEntity", b =>
                {
                    b.HasOne("OnlineStoreBycle.DAL.Entites.BycleEntity", "Bycle")
                        .WithMany("Reviews")
                        .HasForeignKey("BycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bycle");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BrandBycleEntity", b =>
                {
                    b.Navigation("Bycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BycleEntity", b =>
                {
                    b.Navigation("NumberBycles");

                    b.Navigation("Prices");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.BycleTypeEntity", b =>
                {
                    b.Navigation("Bycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.ClientEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.FrameSizeEntity", b =>
                {
                    b.Navigation("Bycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.NumberBycleEntity", b =>
                {
                    b.Navigation("OrderBycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.OrderEntity", b =>
                {
                    b.Navigation("OrderBycles");
                });

            modelBuilder.Entity("OnlineStoreBycle.DAL.Entites.StatusEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
